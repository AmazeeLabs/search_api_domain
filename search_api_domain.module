<?php

/**
 * Search API Domain Access filter
 */

/**
* Implements hook_entity_property_info_alter().
*
* Adds an entity property for the domain access of the node.
*/

function search_api_domain_entity_property_info_alter(&$info) {
  foreach ($info as &$entity_type) {
    $properties = &$entity_type['properties'];

    $properties['custom_domain_access'] = array(
      'label' => t('Domain Access Information'),
      'description' => t('The domains to which the node is published.'),
      'type' => 'list<integer>',
      'getter callback' => 'search_api_domain_get_domain_info',
    );
  }
}

function search_api_domain_get_domain_info($data, array $options, $name, $type, $info) {
  if (!empty($data->domains)) {
    // If entity has "Send to all affiliates" enabled: add "-1" to domains list.
    $all_affiliates = !empty($data->domain_site) ? array(-1 => -1) : array();
    return $all_affiliates + $data->domains;
  }
  return NULL;
}

/**
* Implements hook_search_api_query_alter().
*
* Adds a filter for the current domain.
*/

function search_api_domain_search_api_query_alter(SearchApiQueryInterface $query) {
  $domain = domain_get_domain();
  $filter = new SearchApiQueryFilter('OR');
  if (isset($domain['domain_id'])) {
    $filter->condition('custom_domain_access', $domain['domain_id']);
  }
  // Do not filter entities that have "Send to all affiliates" enabled.
  $filter->condition('custom_domain_access', -1);
  $query->filter($filter);
}
